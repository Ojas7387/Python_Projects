# -*- coding: utf-8 -*-
"""chance-of-admission-for-masters.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/Ojas7387/3dd87602ca53de2861bb1c88e46c384e/chance-of-admission-for-masters.ipynb

**Lets predict the chances of admission of a student to a Graduate program based on:**

GRE Scores (290 to 340)\
TOEFL Scores (92 to 120)\
University Rating (1 to 5)\
Statement of Purpose (1 to 5)\
Letter of Recommendation Strength (1 to 5)\
Undergraduate CGPA (6.8 to 9.92)\
Research Experience (0 or 1)\
Chance of Admit (0.34 to 0.97)
"""

import pandas as pd

admission = pd.read_csv('https://github.com/ybifoundation/Dataset/raw/main/Admission%20Chance.csv')

admission.head()

admission.info()

admission.describe()

"""As there are no null values in this dataset let us proceed to splitting the data for training and testing"""

admission.columns

#admission = admission.rename(columns={'Chance of Admit ': 'Admission Chance'})

admission.columns

admission.info()

y = admission['Chance of Admit ']

X= admission.drop(['Serial No','Chance of Admit '], axis=1)

print(X.shape)

print(y.shape)

"""Now Lets perform train test split"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y, train_size=0.7, random_state=2529)

# checking shape of train and test sample
X_train.shape, X_test.shape, y_train.shape, y_test.shape

# Model Selection
from sklearn.linear_model import LinearRegression
model = LinearRegression()

# Train or fit model
model.fit(X_train,y_train)

model.intercept_

model.coef_

y_pred = model.predict(X_test)

y_pred

# model accuracy
from sklearn.metrics import mean_absolute_error, mean_absolute_percentage_error, mean_squared_error

mean_absolute_error(y_test,y_pred)

mean_absolute_percentage_error(y_test,y_pred)

mean_squared_error(y_test,y_pred)