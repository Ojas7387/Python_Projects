# -*- coding: utf-8 -*-
"""Cancer Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qoMdMbsdOwLG5hMYULiXHoV437Mzocio

**Cancer Prediction**

Dataset Information:

Target Variable (y):

Diagnosis (M = malignant, B = benign)
Ten features (X) are computed for each cell nucleus:

radius (mean of distances from center to points on the perimeter)\
texture (standard deviation of gray-scale values)\
perimeter\
area\
smoothness (local variation in radius lengths)\
compactness (perimeter^2 / area - 1.0)\
concavity (severity of concave portions of the contour)\
concave points (number of concave portions of the contour)\
symmetry\
fractal dimension (coastline approximation - 1)\
For each characteristic three measures are given:

a. Mean

b. Standard error

c. Largest/ Worst
"""

import pandas as pd

cancer = pd.read_csv('https://github.com/YBIFoundation/Dataset/raw/main/Cancer.csv')
cancer.head()

cancer.head()

cancer.info()

cancer.describe()

# define target (y) and features (X)
cancer.columns

y = cancer['diagnosis']

X = cancer.drop(['id','diagnosis','Unnamed: 32'],axis=1)

# train test split
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y, train_size=0.7, random_state=2529)

# check shape of train and test sample
X_train.shape, X_test.shape, y_train.shape, y_test.shape

# select model
from sklearn.linear_model import LogisticRegression
model = LogisticRegression(max_iter=5000)

# train or fit model
model.fit(X_train,y_train)

model.intercept_

model.coef_

# predict model
y_pred = model.predict(X_test)

y_pred

# model accuracy
from sklearn.metrics import confusion_matrix, accuracy_score, classification_report

confusion_matrix(y_test,y_pred)

accuracy_score(y_test,y_pred)

print(classification_report(y_test,y_pred))

